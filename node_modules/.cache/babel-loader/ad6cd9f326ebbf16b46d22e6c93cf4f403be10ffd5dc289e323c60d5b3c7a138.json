{"ast":null,"code":"var _jsxFileName = \"/home/est.joaoduarte/Documentos/projeto-alura/react/form-test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Team from \"./components/Team\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const listGender = [{\n    name: 'RPG',\n    firstColor: '#f4b4a1',\n    secondColor: '#143d59'\n  }, {\n    name: 'FPS',\n    firstColor: '#ffe042',\n    secondColor: '#e71989'\n  }, {\n    name: 'MOBA',\n    firstColor: '#0e387a',\n    secondColor: '#9fafca'\n  }];\n  const [games, setGames] = useState([]);\n  const aNewGameAdd = game => {\n    console.log(game);\n    setGames([...games, game]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        listGender: listGender.map(gender => gender.name),\n        aRegisteredGame: game => aNewGameAdd(game)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), listGender.map(gender => /*#__PURE__*/_jsxDEV(Team, {\n        name: gender.name,\n        firstColor: gender.firstColor,\n        secondColor: gender.secondColor,\n        games: games.filter(game => game.gender === gender.name)\n      }, gender.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SgsqhCs8w7mRqbuqzj9mwUxQCDQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Form","Team","jsxDEV","_jsxDEV","App","_s","listGender","name","firstColor","secondColor","games","setGames","aNewGameAdd","game","console","log","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","map","gender","aRegisteredGame","filter","_c","$RefreshReg$"],"sources":["/home/est.joaoduarte/Documentos/projeto-alura/react/form-test/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Team from \"./components/Team\"\n\nfunction App() {\n\n  const listGender = [\n    {\n      name:'RPG',\n      firstColor:'#f4b4a1',\n      secondColor:'#143d59',\n    },\n    {\n      name:'FPS',\n      firstColor:'#ffe042',\n      secondColor:'#e71989',\n    },\n    {\n      name:'MOBA',\n      firstColor:'#0e387a',\n      secondColor:'#9fafca',\n    }\n  ]\n\n  const [games,setGames] = useState([])\n\n  const aNewGameAdd = (game) =>{\n    console.log(game)\n    setGames([...games, game])\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header/>\n        <Form listGender ={listGender.map(gender => gender.name)}  aRegisteredGame={game => aNewGameAdd(game)}/>\n        {listGender.map(gender=> <Team \n        key={gender.name} \n        name={gender.name} \n        firstColor={gender.firstColor} \n        secondColor={gender.secondColor}\n        games={games.filter(game => game.gender === gender.name)}\n        />)}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,UAAU,GAAG,CACjB;IACEC,IAAI,EAAC,KAAK;IACVC,UAAU,EAAC,SAAS;IACpBC,WAAW,EAAC;EACd,CAAC,EACD;IACEF,IAAI,EAAC,KAAK;IACVC,UAAU,EAAC,SAAS;IACpBC,WAAW,EAAC;EACd,CAAC,EACD;IACEF,IAAI,EAAC,MAAM;IACXC,UAAU,EAAC,SAAS;IACpBC,WAAW,EAAC;EACd,CAAC,CACF;EAED,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMa,WAAW,GAAIC,IAAI,IAAI;IAC3BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,IAAI,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bd,OAAA,CAACe,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACTnB,OAAA,CAACH,IAAI;QAACM,UAAU,EAAGA,UAAU,CAACiB,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACjB,IAAI,CAAE;QAAEkB,eAAe,EAAEZ,IAAI,IAAID,WAAW,CAACC,IAAI;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACvGhB,UAAU,CAACiB,GAAG,CAACC,MAAM,iBAAGrB,OAAA,CAACF,IAAI;QAE9BM,IAAI,EAAEiB,MAAM,CAACjB,IAAK;QAClBC,UAAU,EAAEgB,MAAM,CAAChB,UAAW;QAC9BC,WAAW,EAAEe,MAAM,CAACf,WAAY;QAChCC,KAAK,EAAEA,KAAK,CAACgB,MAAM,CAACb,IAAI,IAAIA,IAAI,CAACW,MAAM,KAAKA,MAAM,CAACjB,IAAI;MAAE,GAJpDiB,MAAM,CAACjB,IAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CA1CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}